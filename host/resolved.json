{
  "swagger": "2.0",
  "basePath": "/v1",
  "host": "127.0.0.1:9000",
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "ErrorResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "BaseNotification": {
      "required": [
        "name",
        "filter",
        "notification"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this subscription",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Subscription name",
          "pattern": "^[a-zA-Z0-9\\-]{5,30}$",
          "example": "your-subscription-name"
        },
        "filter": {
          "type": "array",
          "description": "The filters that the subscription should receive.",
          "items": {
            "type": "string",
            "pattern": "^(publish|\\*)\\.([a-zA-Z\\-\\*]*[:|\\.]?){1,5}$",
            "example": "publish.people:newHIre"
          }
        },
        "notification": {
          "type": "object",
          "description": "The details of the type of notification"
        }
      }
    },
    "HTTPSubscriberApiKey": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseNotification"
        },
        {
          "properties": {
            "notification": {
              "type": "object",
              "description": "The details of the HTTP notifier",
              "required": [
                "url",
                "auth"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "default": "http",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "description": "The URL where we should send notifications",
                  "pattern": "^https?:\\/\\/([0-9a-zA-Z-]*\\.?){1,10}(:[0-9]*)?(\\/[a-zA-Z0-9-]+)*$",
                  "example": "https://your-domain.com/api"
                },
                "auth": {
                  "type": "object",
                  "description": "The details of the authentication method",
                  "required": [
                    "header",
                    "value"
                  ],
                  "properties": {
                    "header": {
                      "type": "string",
                      "description": "The key to add to the request headers",
                      "pattern": "^[a-zA-Z0-9\\-]*$",
                      "default": "x-api-key"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the authorisation header",
                      "minLength": 5
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "AuthKeyResponse": {
      "required": [
        "id",
        "issuedTo",
        "validFrom"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The key to be passed in the x-api-key header"
        },
        "issuedTo": {
          "type": "string",
          "description": "The User the API key was issued to"
        },
        "validFrom": {
          "type": "integer",
          "description": "UNIX Timestamp the token was issued"
        }
      }
    },
    "Guid": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "pattern": "/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i",
          "description": "The GUID identifier"
        }
      }
    },
    "Namespace": {
      "required": [
        "id",
        "description"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique name",
          "pattern": "^[a-zA-Z0-9\\-]{5,30}$"
        },
        "description": {
          "type": "string",
          "description": "The description",
          "maxLength": 50
        }
      }
    }
  },
  "info": {
    "version": "0.0.1",
    "title": "ThoughtData Gateway",
    "contact": {
      "name": "Peopledata Product Team",
      "email": "peopledata-product-team@thoughtworks.com"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "subscription",
      "description": "Manage subscriptions"
    },
    {
      "name": "namespace",
      "description": "Manage namespaces (aka swagger tags)"
    }
  ],
  "paths": {
    "/": {
      "x-swagger-pipe": "swagger_raw"
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    },
    "/swagger.json": {
      "x-swagger-pipe": "swagger_raw"
    },
    "/auth": {
      "x-swagger-router-controller": "auth",
      "get": {
        "description": "Returns the auth key for the current user",
        "operationId": "read",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "The Auth Key",
            "schema": {
              "$ref": "#/definitions/AuthKeyResponse"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/auth/okta/callback": {
      "x-swagger-router-controller": "auth",
      "get": {
        "description": "Handles Okta OAuth Callbacks",
        "operationId": "callback",
        "tags": [
          "auth"
        ],
        "responses": {
          "301": {
            "description": "Redirection to the auth key route"
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/namespace": {
      "x-swagger-router-controller": "namespace",
      "post": {
        "description": "Create a namespace",
        "operationId": "create",
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The namespace definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item created.",
            "schema": {
              "$ref": "#/definitions/Guid"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Return all namespaces definitions",
        "operationId": "readAll",
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of namespaces",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Namespace"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/namespace/{id}": {
      "x-swagger-router-controller": "namespace",
      "get": {
        "description": "Reads a namespace by ID",
        "operationId": "read",
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the namespace to read",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Namespace",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a namespace by ID",
        "operationId": "delete",
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the namespace to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted."
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Updates a namespace",
        "operationId": "update",
        "tags": [
          "namespace"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the namespace to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The namespace definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Updated"
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscription": {
      "x-swagger-router-controller": "subscription",
      "get": {
        "description": "Return all subscriptions",
        "operationId": "readAll",
        "tags": [
          "subscription"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of schemas",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaseNotification"
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscription/http": {
      "x-swagger-router-controller": "subscription",
      "post": {
        "description": "Create a HTTP subscription, authenticated using a basic API key in the Request Headers",
        "tags": [
          "subscription"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "operationId": "createHttp",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The subscription definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HTTPSubscriberApiKey"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item created.",
            "schema": {
              "$ref": "#/definitions/Guid"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscription/{id}": {
      "x-swagger-router-controller": "subscription",
      "get": {
        "description": "Reads a subscription by ID",
        "operationId": "read",
        "tags": [
          "subscription"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the subscription to read",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Schema",
            "schema": {
              "$ref": "#/definitions/BaseNotification"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a subscription by ID",
        "operationId": "delete",
        "tags": [
          "subscription"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the subscription to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted."
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  }
}